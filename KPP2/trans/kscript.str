module kscript

imports
  signatures/Common-sig
  signatures/KOS-sig
  signatures/KPP2-sig
  
  desugar
  pp

strategies
  transform-kscript = innermost(strip-types); innermost(legacy)
  
rules
  
  strip-types: Cast(_, a) -> a
  strip-legacy: Legacy(a) -> a
  
  legacy: Number(a)					-> Legacy(KNumber(a))
  legacy: Div(Legacy(a), Legacy(b))	-> Legacy(KDiv(a, b))
  
  legacy: Declaration(_, name) 			-> LegacyBlock([KDeclareIdentifierUnscoped("declare", name, KDefaultPreset("to", KNumber("0")), ".")])
  legacy: Assignment(name, Legacy(v)) 	-> LegacyBlock([KSet(name, v, ".")])
  legacy: Identifier(name) -> KIdentifier(name)
  
  legacy: DesugaredClass(name, fields, methods) -> KDeclareIdentifierScoped("declare", "global", <conc-strings>("class_", name), KDefaultPreset("to",
      KFunctionCall(KIdentifier("lexicon"), <flatten-list> ["\"new\"", KAnonymousFunction([
        KSet(KIdentifier("prototype"), KIdentifier(<conc-strings>("class_", name)), "."),
        KSet(KIdentifier("result"), KFunctionCall(KIdentifier("lexicon"), []), "."),
      	KBlock(<flatten-list> [
      		<map(initialize-class)> fields,
      		<map(initialize-class)> methods
      	]),
      	KReturn(Some(KIdentifier("result")), ".")
      ]), <map(define-methods)> methods])
    ), ".")
    
  initialize-class: Field(_, name, value) -> KSet(KArrayIndex(KIdentifier("result"), KString(<conc-strings>("\"", name, "\""))), <strip-legacy; innermost(legacy)> value, ".")
  initialize-class: Method(_, name, _, _) -> KSet(KArrayIndex(KIdentifier("result"), KString(<conc-strings>("\"", name, "\""))), KFunctionCall(KSuffix(KArrayIndex(KIdentifier("prototype"), KString(<conc-strings>("\"", name, "\""))), "bind"), [KIdentifier("result")]), ".")
  
  define-methods: Method(_, name, params, instructions) -> [KString(<conc-strings>("\"", name, "\"")), KAnonymousFunction(<flatten-list>[params, [<flatten-legacy-blocks>instructions]])]
    where not( <?[LegacyBlock(_)]> instructions)
  
 // legacy: Method(_, name, params, instructions) -> 
  legacy: Parameter(_, name) -> KDeclareParameter(None(), [KDefaultDefinition(name, None())], ".")
 // legacy: Field(_, name, Legacy(value)) -> [name, value]
  
  //create-constructor(|classname): [] -> []
  //create-constructor(|classname): [name, KAnonymousFunction(inst) | rest] -> [ KSet(name, KFunctionCall(KSuffix(KArrayIndex(KIdentifier(classname), KString(name)), "bind"), [KIdentifier("result")]), ".")]
  //create-constructor(|classname): [name, value | rest] -> [ KSet(name
  
  flatten-legacy-blocks: [] -> []
  flatten-legacy-blocks: [LegacyBlock(head)|tail] -> [head|<flatten-legacy-blocks>tail]
  	
  legacy: ModernFile(File(usings, legacyInstructions)) -> LegacyFile(<flatten-list>legacyInstructions)